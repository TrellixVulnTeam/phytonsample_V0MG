import tkinter
from tkinter import ttk, scrolledtext

# メインウィンドウ
main_window = tkinter.Tk()
main_window.title('mo22comi')
main_window.geometry('600x830')

# メインフレーム
main_frame = ttk.Frame(main_window)
main_frame.grid(column=0, row=0, sticky=tkinter.NSEW, padx=5, pady=10)

text_frame = ttk.Frame(main_window)
text_frame.grid(column=0, row=1, sticky=tkinter.NSEW, padx=5, pady=10)

# ログフレーム
log_frame = ttk.Frame(main_window)
log_frame.grid(column=0, row=2, sticky=tkinter.NSEW, padx=5, pady=10)

# ウィジェット作成
file_label = ttk.Label(main_frame, text='データ')
file_box = ttk.Entry(main_frame)
file_btn = ttk.Button(main_frame, text='参照')
entry_label = ttk.Label(main_frame, text='エントリー')
entry_box = ttk.Entry(main_frame)

text_label = ttk.Label(text_frame, text='テキスト')
text_box = scrolledtext.ScrolledText(text_frame)

log_label = ttk.Label(log_frame, text='ログ')
log_box = scrolledtext.ScrolledText(log_frame)

# ウィジェットの配置
file_label.grid(column=0, row=0, pady=10, padx=5)
file_box.grid(column=1, row=0, sticky=tkinter.EW, padx=5)
file_btn.grid(column=2, row=0, padx=5)

entry_label.grid(column=0, row=1)
entry_box.grid(column=1, row=1, sticky=tkinter.EW, pady=10, padx=5)

text_label.grid(column=0, row=0, sticky=tkinter.NW, padx=5)
text_box.grid(column=0, row=1, pady=5, padx=5)

log_label.grid(column=0, row=0, sticky=tkinter.NW, padx=5)
log_box.grid(column=0, row=1, pady=10, padx=5)

# 配置設定
main_window.columnconfigure(0, weight=1)
main_window.rowconfigure(0, weight=1)
main_frame.columnconfigure(1, weight=1)

main_window.mainloop()






 #! /usr/bin/env python
02:     
03:     """
04:     button.py 
05:     
06:     This demonstration script creates a toplevel window containing
07:     several button widgets.
08:     
09:     June 14, 2005
10:     """
11:     
12:     
13:     import Tkinter as Tk
14:     import template as A
15:     
16:     
17:     class Button(Tk.Button):
18:         """ Buttons to change bg of frames """
19:         def __init__(self, master, obj, color_name, color_id):
20:             Tk.Button.__init__(self, master, text=color_name, width=15, command=self.command)
21:             self.obj = obj
22:             self.color_id = color_id
23:     
24:         def command(self):
25:             self.obj.demo_frame.config(bg=self.color_id)
26:             self.obj.demo_buttons.config(bg=self.color_id)
27:             
28:     
29:     class Demo(A.Demo):
30:         """a demo class """
31:         
32:         def __init__(self, cmain):
33:             A.Demo.__init__(self, cmain, __file__)
34:             self.ini_frame()
35:     
36:         def ini_demo_called(self):
37:             """ This method should be defined"""
38:             self.ini_demo_called_0()
39:             self.ini_frame()
40:     
41:         def ini_frame(self):
42:             self.demo_main_frame.master.title("Button Demonstration")
43:             self.demo_main_frame.master.geometry('+50+50')
44:             A.Label(self.demo_main_frame, text=
45:             "If you click on any of the four buttons below, " 
46:             "the background of the button area will change to the color indicated in the button."
47:             , width=35, wraplength='8c')
48:             for name, code in [('Deeppink', '#FF1493'), ('Cornflowerblue', '#6495ED'),
49:                                  ('Springgreen', '#00FF7F'), ('Gold', '#FFD700')]:
50:                 b = Button(self.demo_frame, self, name, code) 
51:                 b.pack(padx=10, pady=5)
52:     
53:     
54:     ##------------------------------------------------ 
55:     def demo(*av):
56:         """ function called by `index.py'"""
57:         d = Demo(False)
58:         d.demo_window.focus_set()
59:     
60:     if __name__ == '__main__':
61:         d = Demo(True)
62:         d.demo_main_frame.mainloop()